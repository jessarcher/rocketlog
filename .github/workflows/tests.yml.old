name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: PHP 8.0

    runs-on: ubuntu-latest

    env:
      DB_DATABASE: testing
      DB_USER: sail
      DB_PASSWORD: password

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Update npm
      run: npm install -g npm

    - name: Checkout
      uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Add HTTP basic auth credentials
      run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Get npm cache directory
      id: npm-cache
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

    - name: Install npm dependencies
      run: npm ci --production --no-progress --no-save --no-optional

    - name: Compile assets
      run: npm run production

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Setup Database
      run: |
        sudo /etc/init.d/mysql start
        mysql -e "CREATE DATABASE ${{ env.DB_DATABASE }}; CREATE USER '${{ env.DB_USER }}'@'%' IDENTIFIED WITH mysql_native_password BY '${{ env.DB_PASSWORD }}'; GRANT ALL PRIVILEGES ON ${{ env.DB_DATABASE }}.* TO '${{ env.DB_USER }}'@'%'" -uroot -proot

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit
