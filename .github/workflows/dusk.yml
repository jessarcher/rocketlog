name: Dusk
on:
  - push
jobs:
  dusk:
    strategy:
      matrix:
        operating-system:
          - ubuntu-latest
        php-version:
          - '8.0'
    name: php ${{ matrix.php-version }} on ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml
          coverage: none
      - name: Prepare the environment
        run: cp .env.example .env
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Setup composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
      - name: Install npm dependencies
        run: npm install --no-progress --no-save --no-optional
      - name: Build assets
        run: npm run build
      - name: Upgrade chrome driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`
      - name: Start chrome driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Generate application key
        run: php artisan key:generate
      - name: Run Laravel application
        env:
          DB_CONNECTION: mysql
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: null
        run: |
          php artisan migrate:fresh --seed
          php artisan serve --no-reload > storage/logs/server.log 2>&1 &
      - name: Run Dusk tests
        env:
          APP_URL: http://127.0.0.1:8000
          SESSION_DOMAIN: 127.0.0.1
          DB_CONNECTION: mysql
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: null
        run: php artisan dusk
      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            tests/Browser/console
            storage/logs/*.log
